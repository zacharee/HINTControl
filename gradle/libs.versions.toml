[versions]
android-gradle = "8.13.0"
androidx-activity-compose = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-core = "1.17.0"
androidx-glance-appwidget = "1.1.1"
appdirs = "1.4.0"
bugsnag-android = "6.17.0"
bugsnag-gradle = "1.0.0"
bugsnag-jvm = "3.8.0"
buildkonfig-gradle = "0.17.1"
compose = "1.9.10+dev2818"
compose-hot-reload = "1.0.0-beta06"
composedialog = "0.2.1"
conveyor = "1.12"
conveyor-control = "1.1"
desugar_jdk_libs = "2.1.5"
filekitCore = "0.10.0"
githubApi = "1.329"
google-material = "1.14.0-alpha04"
jna = "5.17.0"
jsystemthemedetector = "7dde337429"
kmpfile = "0.8.0"
kmpplatform = "0.1.0"
koalaplot = "0.9.1"
korlibs = "6.0.2"
kotlin = "2.2.10"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
kotlinxDatetime = "0.7.1"
ksp = "2.2.10-2.0.2"
kstore = "1.0.0"
ktor = "3.2.3"
material-icons-core = "1.7.3"
materialyou = "0.2.9"
moko-mvvm = "0.16.1"
moko-resources = "0.25.0"
multiplatform-settings = "1.3.0"
multiplatformMarkdownRenderer = "0.36.0-b02"
nserrorKt = "0.2.0"
nsexceptionKt = "1.0.3"
nsexceptionKtBugsnag = "1.0.0-BETA-11"
oshi = "6.8.3"
relinker = "1.4.5"
room = "2.7.2"
semver = "3.0.0"
slf4j = "2.0.17"
sqlite = "2.5.2"
taskerpluginlibrary = "0.4.10"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-glance-appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "androidx-glance-appwidget" }
appdirs = { module = "net.harawata:appdirs", version.ref = "appdirs" }
bugsnag-android = { module = "com.bugsnag:bugsnag-android", version.ref = "bugsnag-android" }
bugsnag-jvm = { module = "com.bugsnag:bugsnag", version.ref = "bugsnag-jvm" }
composedialog = { module = "dev.zwander:composedialog", version.ref = "composedialog" }
conveyor-control = { module = "dev.hydraulic.conveyor:conveyor-control", version.ref = "conveyor-control" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "desugar_jdk_libs" }
filekit-core = { module = "io.github.vinceglb:filekit-core", version.ref = "filekitCore" }
filekit-dialogs = { module = "io.github.vinceglb:filekit-dialogs", version.ref = "filekitCore" }
github-api = { module = "org.kohsuke:github-api", version.ref = "githubApi" }
google-material = { module = "com.google.android.material:material", version.ref = "google-material" }
jSystemThemeDetector = { module = "com.github.zacharee:jSystemThemeDetector", version.ref = "jsystemthemedetector" }
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
kmpfile = { module = "dev.zwander:kmpfile", version.ref = "kmpfile" }
kmpfile-filekit = { module = "dev.zwander:kmpfile-filekit", version.ref = "kmpfile" }
kmpplatform = { module = "dev.zwander:kmpplatform", version.ref = "kmpplatform" }
koalaplot = { module = "io.github.koalaplot:koalaplot-core", version.ref = "koalaplot" }
korlibs-korio = { module = "com.soywiz:korlibs-io", version.ref = "korlibs" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
material-icons-core = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "material-icons-core" }
moko-mvvm-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
moko-mvvm-flow-compose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "moko-mvvm" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
multiplatform-markdown-renderer = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "multiplatformMarkdownRenderer" }
multiplatform-markdown-renderer-m3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "multiplatformMarkdownRenderer" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatformSettings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
nserrorKt = { module = "com.rickclephas.kmp:nserror-kt", version.ref = "nserrorKt" }
nsexceptionKt-bugsnag = { module = "com.rickclephas.kmp:nsexception-kt-bugsnag", version.ref = "nsexceptionKtBugsnag" }
nsexceptionKt-core = { module = "com.rickclephas.kmp:nsexception-kt-core", version.ref = "nsexceptionKt" }
oshi-core = { module = "com.github.oshi:oshi-core", version.ref = "oshi" }
relinker = { module = "com.getkeepsafe.relinker:relinker", version.ref = "relinker" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
semver = { module = "io.github.z4kn4fein:semver", version.ref = "semver" }
slf4j-jdk14 = { module = "org.slf4j:slf4j-jdk14", version.ref = "slf4j" }
sqlite = { module = "androidx.sqlite:sqlite", version.ref = "sqlite" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
taskerpluginlibrary = { module = "com.joaomgcd:taskerpluginlibrary", version.ref = "taskerpluginlibrary" }
zwander-materialyou = { module = "dev.zwander:materialyou", version.ref = "materialyou" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle" }
android-library = { id = "com.android.library", version.ref = "android-gradle" }
bugsnag-gradle = { id = "com.bugsnag.gradle", version.ref = "bugsnag-gradle" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig-gradle" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-hot-reload = { id = "org.jetbrains.compose.hot-reload", version.ref = "compose-hot-reload" }
conveyor = { id = "dev.hydraulic.conveyor", version.ref = "conveyor" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
room = { id = "androidx.room", version.ref = "room" }
